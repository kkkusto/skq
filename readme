import os
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Specify the folder containing the CSV files
folder_path = 'path_to_your_folder'

# Initialize a DataFrame to store cumulative counts across files
all_data = pd.DataFrame()

# Process each CSV file in the folder
for file_name in os.listdir(folder_path):
    if file_name.endswith('.csv'):
        file_path = os.path.join(folder_path, file_name)

        # Read the CSV file without headers
        df = pd.read_csv(file_path, header=None, names=['month_yr', 'row_count_per_month'])

        # Add the third column based on the cumulative sum of the second column
        df['cumulative_count'] = df['row_count_per_month'].cumsum()
        df['file_name'] = file_name  # Add a column to indicate the file name

        # Append the data to the consolidated DataFrame
        all_data = pd.concat([all_data, df], ignore_index=True)

        # Save the updated DataFrame back to a new file or overwrite
        output_file_path = os.path.join(folder_path, f'updated_{file_name}')
        df.to_csv(output_file_path, index=False)

        print(f"Processed file: {file_name}, saved as: updated_{file_name}")

# Ensure all_data has unique combinations of month_yr and file_name for plotting
all_data['month_yr'] = pd.to_datetime(all_data['month_yr'])  # Convert to datetime for proper sorting
all_data.sort_values(by=['month_yr', 'file_name'], inplace=True)

# Plot the data using seaborn
plt.figure(figsize=(12, 6))
sns.lineplot(data=all_data, x='month_yr', y='cumulative_count', hue='file_name', marker='o')

# Customize the plot
plt.title("Cumulative Counts Across Files", fontsize=16)
plt.xlabel("Month-Year", fontsize=12)
plt.ylabel("Cumulative Count", fontsize=12)
plt.legend(title="File Name")
plt.xticks(rotation=45)
plt.tight_layout()

# Show the plot
plt.show()
